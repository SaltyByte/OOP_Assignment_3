from src.GraphAlgo import GraphAlgo
from src.DiGraph import DiGraph


class TestGraphAlgo:
    graph = DiGraph()
    graph2 = DiGraph()
    graph.add_node(1, (4, 8))
    graph.add_node(2, (4, 6))
    graph.add_node(3, (2.5, 4.5))
    graph.add_node(4, (5, 4.5))
    graph.add_node(5, (7, 4.5))
    graph.add_node(6, (9.5, 4.5))
    graph.add_node(7, (3.5, 3.5))
    graph.add_node(8, (1, 6))
    graph.add_node(9, (5.5, 3))
    graph.add_node(10, (10, 3.2))
    graph.add_node(11, (8.5, 3.2))
    graph.add_node(12, (8, 2))
    graph.add_node(13, (8, 1))
    graph.add_node(14, (6.5, 1))

    graph.add_edge(1, 2, 5)
    graph.add_edge(2, 3, 2)
    graph.add_edge(2, 4, 1)
    graph.add_edge(3, 2, 5)
    graph.add_edge(3, 4, 10)
    graph.add_edge(1, 5, 3)
    graph.add_edge(7, 3, 2)
    graph.add_edge(7, 4, 2)
    graph.add_edge(7, 9, 5)
    graph.add_edge(9, 5, 3)
    graph.add_edge(5, 4, 12)
    graph.add_edge(4, 9, 1.2)
    graph.add_edge(9, 14, 7)
    graph.add_edge(14, 8, 3)
    graph.add_edge(8, 3, 6)
    graph.add_edge(5, 12, 17)
    graph.add_edge(12, 13, 2)
    graph.add_edge(13, 5, 9.4)
    graph.add_edge(5, 6, 1)
    graph.add_edge(6, 11, 4)
    graph.add_edge(11, 10, 4)
    graph.add_edge(10, 11, 4)
    graph.add_edge(10, 12, 2)
    graph.add_edge(3, 9, 3.5)

    for i in range(0, 9):
        graph2.add_node(i)

    graph2.add_edge(0, 3, 1)
    graph2.add_edge(1, 4, 1)
    graph2.add_edge(1, 2, 1)
    graph2.add_edge(2, 4, 1)
    graph2.add_edge(2, 3, 1)
    graph2.add_edge(3, 7, 1)
    graph2.add_edge(4, 6, 1)
    graph2.add_edge(4, 1, 1)
    graph2.add_edge(5, 6, 1)
    graph2.add_edge(6, 8, 1)
    graph2.add_edge(7, 3, 1)
    graph2.add_edge(8, 5, 1)

    graph_algo = GraphAlgo(graph)
    # graph_algo2 = GraphAlgo(graph2)
    # graph_algo2.plot_graph()
    # li2 = graph_algo2.connected_component(5)
    # li3 = graph_algo2.connected_components()
    # graph_algo2.plot_graph()
    # li = graph_algo.connected_component(1)
    # print(li2)
    # print(li3)
    # graph_algo2 = GraphAlgo(None)
    graph_algo3 = GraphAlgo()
    # graph_algo.save_to_json("hello.json")
    # graph_algo2.load_from_json("hello.json")
    graph_algo3.load_from_json("G_10_80_0.json")
    graph_algo3.plot_graph()
    # print(graph_algo2.get_graph().get_all_v())
    print("hello")
    # graph_algo.plot_graph()



